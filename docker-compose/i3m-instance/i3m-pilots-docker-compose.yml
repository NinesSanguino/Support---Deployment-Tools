version: '3'
services:
   backplane:
     build: https://pilot-deployment:glpat-fUkddjDKZvLtjsf7v48M@gitlab.com/i3-market/code/backplane/backplane-api-gateway/backplane.git
     container_name: backplane
     ports:
        - 3000:3000
     environment:
       OIDC_CLIENT_ID: ${BACKPLANE_OIDC_CLIENT_ID}
       OIDC_CLIENT_SECRET: ${BACKPLANE_OIDC_CLIENT_SECRET}
       OIDC_PROVIDER_WELL_KNOWN_URL: ${BACKPLANE_OIDC_PROVIDER_WELL_KNOWN_URL}
     networks:
       - i3m-net
     command: node .   
   
   tokenizer:
     build: https://pilot-deployment:glpat-fUkddjDKZvLtjsf7v48M@gitlab.com/i3-market/code/wp3/t3.3/nodejs-tokenization-treasury-api.git
     container_name: tokenizer-service
     ports:
        - 3001:3001
     environment:
#       PORT: ${PORT}
       ETH_HOST: ${ETH_HOST}
       CONTRACT_ADDRESS: ${CONTRACT_ADDRESS}
       WEBHOOK: ${WEBHOOK}
     networks:
       - i3m-net
     command: npm start   
#    
#    sdk-ri:
#       image: registry.gitlab.com/i3-market/code/sdk/i3m-sdk-reference-implementation/i3market-sdk-ri:latest
#       container_name: sdk-ref-impl
#       ports:
#          - 8181:8080
#       environment:
#       networks:
#          - i3market-network
#      command: java -jar /usr/local/jetty/start.jar
#     

   oidc-provider-app:
     build: https://pilot-deployment:glpat-fUkddjDKZvLtjsf7v48M@gitlab.com/i3-market/code/wp3/t3.1-self-sovereign-identity-and-access-management/node-oidc-provider.git
     container_name: oidc-provider-app
     restart: unless-stopped
     networks:
       - i3m-net
#      - reverse-proxy
     environment:
      OIDC_PROVIDER_DB_HOST: ${OIDC_PROVIDER_DB_HOST}
      OIDC_PROVIDER_DB_PORT: ${OIDC_PROVIDER_DB_PORT}
      OIDC_PROVIDER_DB_USERNAME: ${OIDC_PROVIDER_DB_USERNAME}
      OIDC_PROVIDER_DB_PASSWORD: ${OIDC_PROVIDER_DB_PASSWORD}
      OIDC_PROVIDER_DB_DATABASE: ${OIDC_PROVIDER_DB_DATABASE}
      RPC_URL: ${RPC_URL}
      WHITELIST: ${WHITELIST}
      NODE_ENV: ${NODE_ENV}
      REVERSE_PROXY: ${REVERSE_PROXY}
      USE_NGROK: ${USE_NGROK}
      JWKS_KEYS_PATH: ${JWKS_KEYS_PATH}
      IDENTITY_PATH: ${IDENTITY_PATH} p
        
     volumes:
      - ./volumes/misc:/app/misc
     depends_on:
      - oidc-provider-db
     
   oidc-provider-db:
     image: mongo:4-bionic
     container_name: oidc-provider-db
     restart: unless-stopped
     networks:
      - i3m-net
     environment:
       MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
       MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
       MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
     ports:
       - 27017:27017
     volumes:
       - oidc-mongo:/data/db
       - ./volumes/scripts:/data/scripts:ro
       - ./volumes/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
     command: --quiet --setParameter logLevel=0
       
   semantic_engine:
    container_name: "semantic-engine"
    image: registry.gitlab.com/i3-market/code/wp4/semantic-engine:latest
    ports:
      - "8082:8002"
    depends_on:
      - "virtuoso"
    networks:
       - i3m-net    
   
   virtuoso:
      container_name: "virtuoso"
      image: tenforce/virtuoso
      environment:
        SPARQL_UPDATE: ${SPARQL_UPDATE}
        DBA_PASSWORD: ${DBA_PASSWORD}
        DEFAULT_GRAPH: ${DEFAULT_GRAPH}
      volumes:  
         - semantic-engine-db:/data
      ports:
        - "8890:8890"
      networks:
        - i3m-net
    
   vc:
      build: https://pilot-deployment:glpat-fUkddjDKZvLtjsf7v48M@gitlab.com/i3-market/code/wp3/t3.1-self-sovereign-identity-and-access-management/verifiable-credentials.git
      container_name: vc-service
      restart: unless-stopped
      networks:
        - i3m-net
#        - reverse-proxy
      environment:
        RPC_URL: ${RPC_URL}
        WHITELIST: ${WHITELIST}
        NODE_ENV: ${NODE_ENV}
        REVERSE_PROXY: ${REVERSE_PROXY}
        USE_NGROK: ${USE_NGROK}
        JWKS_KEYS_PATH: ${JWKS_KEYS_PATH}
        IDENTITY_PATH: ${IDENTITY_PATH} 
        CONTEXT_PATH: ${CONTEXT_PATH} 
        OIDC_PROVIDER_REVERSE_PROXY: ${CONTEXT_PATH} 
      volumes:
         - ./volumes/misc:/app/misc
    
   data_access:
      container_name: "data_access"
      build: 
         context: https://pilot-deployment:glpat-fUkddjDKZvLtjsf7v48M@gitlab.com/i3-market/code/sp2/express-datatransfermanagement.git 
         args: 
           USER_ID: ${USER_ID-1000}
           GROUP_ID: ${GROUP_ID-1000}
         
      restart: unless-stopped
      environment:
         NODE_ENV: ${NODE_ENV}
         APP_NAME: ${APP_NAME}
         NPM_SCRIPT: ${NPM_SCRIPT}
      volumes:
        - ./app:/app
      ports:
        - "3100:3000"
        - "9229:9229"
      networks:
        - i3m-net
      command: npm run ${NPM_SCRIPT}

#    auditable-accounting:
#      image: 95.211.3.251:8123/auditable-accounting:latest
#      container_name: auditable-accounting
#      ports:
#         - 8090:3000
#      environment:
#        ALLOWED_CORS: ${ALLOWED_CORS}
#        WEB3_PROVIDER_NAME: ${WEB3_PROVIDER_NAME}
#        WEB3_PROVIDER: ${WEB3_PROVIDER} 
#        WEB3_SC_ADDR: ${WEB3_SC_ADDR}
#        WEB3_KEY: ${WEB3_KEY}
#        WEB3_GAS: ${WEB3_GAS}
#        DB_HOST: ${DB_HOST}
#        DB_PORT: ${DB_PORT}
#        DB_NAME: ${DB_NAME}
#        DB_USER: ${DB_USER}
#        DB_CA: ${DB_CA}
#        DB_CRT: ${DB_CRT}
#        DB_KEY: ${DB_KEY}
#        PATH: ${PATH}
#        NODE_VERSION: ${NODE_VERSION}
#        YARN_VERSION: ${YARN_VERSION}
#      networks:
#         - i3market-network
#     command: dist   
     
#    besu:
    
  # POSTGRES 
  postgres:
    image: postgres
    volumes:
      - ./keycloak-initdata/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - ./volumes/postgres/data:/var/lib/postgresql/data
    environment:
      - POSTGRES_MULTIPLE_DATABASES=
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    networks:
      - i3m-net

  # KEYCLOAK 
  keycloak:
    image: "quay.io/keycloak/keycloak:12.0.4"
    environment:
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      DB_ADDR: ${DB_ADDR}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      PROXY_ADDRESS_FORWARDING: ${PROXY_ADDRESS_FORWARDING}
    command: |
      bash -c "
        /common/wait-for-it.sh -t 60 postgres:5432 &&
        /opt/jboss/tools/docker-entrypoint.sh
      "
    entrypoint: ""
    ports:
      - "8080:8080"
    # /opt/jboss/tools/docker-entrypoint.sh
    volumes: 
      - ./keycloak-initdata/common:/common
    networks:
      - i3m-net
      - reverse-proxy
    
#    nginx-reverse-proxy: 
   
 
networks:
  i3m-net:
  reverse-proxy:
    external: true
volumes:
  oidc-mongo:
  semantic-engine-db:
 